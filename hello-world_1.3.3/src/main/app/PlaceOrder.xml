<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <http:request-config name="HTTP_Request_Configuration" host="www.telhill.com" port="80" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="t-shirt.raml"/>
    </http:request-config>
    <configuration doc:name="Configuration">
     <expression-language>
         <global-functions>
			def newUser() {
                 return ["name" : "mariano"]
             }
             def upperName(user) {
                 return user.name.toUpperCase()
             }
         </global-functions>
     </expression-language>
 </configuration>
    <flow name="ProductRegistrationFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/place-order" metadata:id="6a6bb863-82d6-4d09-bdde-95be96cdd10f" doc:name="HTTP"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="C:\Users\a.miloshevski\Desktop\temp\Mule\dw-quickstart-bundle\dw-tshirt-inputsample.xml"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var tmp='peco'
---

{
	address1: payload.order.buyer.address,
	address2: tmp,
	city: payload.order.buyer.city,
	country: payload.order.buyer.nationality,
	email: payload.order.buyer.email,
	name: payload.order.buyer.name,
	postalCode: payload.order.buyer.postCode as :string,
	size: "M" unless payload.order.buyer.state == "TX" otherwise "XXL",
	stateOrProvince: payload.order.buyer.state match {
		//"TX" -> "Texas",
		//"PP" -> "Prilep"
		str when str == "TX" -> "Texas",
		str when str == "PP" -> "Prilep"
	},
	//call other flow
	call: lookup("mySecondFlow",{res:""}),
	//invoke global function
	"user" :  newUser(),
  	"upper":  upperName(newUser())
}]]></dw:set-payload>
        </dw:transform-message>
        <http:request config-ref="HTTP_Request_Configuration" path="/orders" method="POST" doc:name="HTTP"/>
    </flow>
    <flow name="mySecondFlow">
    <set-payload doc:name="Set Payload" value="#['This is the payload of the second flow!' ]"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
</flow>
</mule>
